//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-FPGA
//---------------------------------------------------------------------
#ifndef NIFPGA_GRPC_LIBRARY_H
#define NIFPGA_GRPC_LIBRARY_H

#include "nifpga_library_interface.h"

#include <server/shared_library.h>

namespace nifpga_grpc {

class NiFpgaLibrary : public nifpga_grpc::NiFpgaLibraryInterface {
 public:
  NiFpgaLibrary();
  virtual ~NiFpgaLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  NiFpga_Status Initialize();
  NiFpga_Status Finalize();
  NiFpga_Status Open(const char* bitfile, const char* signature, const char* resource, uint32_t attribute, NiFpga_Session* session);
  NiFpga_Status Close(NiFpga_Session session, uint32_t attribute);

 private:
  using InitializePtr = decltype(&NiFpga_Initialize);
  using FinalizePtr = decltype(&NiFpga_Finalize);
  using OpenPtr = decltype(&NiFpga_Open);
  using ClosePtr = decltype(&NiFpga_Close);

  typedef struct FunctionPointers {
    InitializePtr Initialize;
    FinalizePtr Finalize;
    OpenPtr Open;
    ClosePtr Close;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nifpga_grpc

#endif  // NIFPGA_GRPC_LIBRARY_H

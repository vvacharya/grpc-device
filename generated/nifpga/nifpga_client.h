
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// EXPERIMENTAL Client convenience wrapper for NI-FPGA.
//---------------------------------------------------------------------
#ifndef NIFPGA_GRPC_CLIENT_H
#define NIFPGA_GRPC_CLIENT_H

#include <grpcpp/grpcpp.h>

#include <nifpga.grpc.pb.h>
#include <tests/utilities/client_helpers.h>

#include <memory>
#include <vector>

namespace nifpga_grpc::experimental::client {

namespace pb = ::google::protobuf;
using StubPtr = std::unique_ptr<NiFpga::Stub>;
using namespace nidevice_grpc::experimental::client;


InitializeResponse initialize(const StubPtr& stub);
FinalizeResponse finalize(const StubPtr& stub);
OpenResponse open(const StubPtr& stub, const pb::string& bitfile, const pb::string& signature, const pb::string& resource, const simple_variant<OpenAttribute, std::int32_t>& attribute);
CloseResponse close(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& attribute);

} // namespace nifpga_grpc::experimental::client

#endif /* NIFPGA_GRPC_CLIENT_H */
